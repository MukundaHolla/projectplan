{"version":3,"sources":["components/layout/SignIn.js","store/actions/authActions.js","components/layout/SignOut.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignOut","state","console","log","firebase","links","uid","layout_SignIn","layout_SignOut","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","fireabse","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initstate","authReducer","arguments","length","undefined","action","message","initState","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kOAqBeA,cAAQ,KANG,SAACC,GACvB,MAAO,CACHC,QAAS,kBAAMD,ECDZ,SAACA,EAAUE,EAAXC,IACcC,EADyBD,EAAjBC,eAGhBC,OAAOJ,UAAUK,KAAK,WACzBN,EAAS,CAAEO,KAAM,2BDChBR,CAjBA,SAACS,GAEZ,OACIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,gBACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,QAAUP,EAAMP,SAAnB,WACJQ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,IAAIF,UAAU,mCAAmCJ,EAAMQ,QAAQC,cEE5EC,EATC,WACZ,OACIT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,WACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,YCqBDf,cARS,SAACoB,GAErB,OADAC,QAAQC,IAAIF,GACL,CACHd,KAAMc,EAAMG,SAASjB,KACrBW,QAASG,EAAMG,SAASN,UAIjBjB,CArBA,SAACS,GAAU,IACdH,EAAkBG,EAAlBH,KAAMW,EAAYR,EAAZQ,QACRO,EAAQlB,EAAKmB,IAAMf,EAAAC,EAAAC,cAACc,EAAD,CAAQT,QAASA,IAAYP,EAAAC,EAAAC,cAACe,EAAD,MACtD,OACIjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,cAAvB,eACEW,+DCoBHI,EA/BO,SAACnB,GAAU,IACrBoB,EAAkBpB,EAAlBoB,cAER,OACInB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,iBAGAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACRgB,GAAiBA,EAAcC,IAAI,SAAAC,GACjC,OACIrB,EAAAC,EAAAC,cAAA,MAAIoB,IAAKD,EAAKE,IACVvB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAakB,EAAKG,KAAlC,KAA+CxB,EAAAC,EAAAC,cAAA,YAC1CmB,EAAKI,SAEVzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACVuB,IAAOL,EAAKM,KAAKC,UAAUC,mBCFrDC,EAhBQ,SAAAC,GAAe,IAAbC,EAAaD,EAAbC,QACrB,OACIhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACX6B,EAAQC,OAEbjC,EAAAC,EAAAC,cAAA,sBAAc8B,EAAQE,gBAAtB,IAAwCF,EAAQG,gBAChDnC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAauB,IAAOM,EAAQI,UAAUR,UAAUS,gBCMlEC,EAdK,SAAAP,GAAkB,IAAfQ,EAAeR,EAAfQ,SACnB,OACIvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACToC,GAAYA,EAASnB,IAAK,SAAAY,GACxB,OACIhC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAK,YAAc2B,EAAQT,IAC7BvB,EAAAC,EAAAC,cAACsC,EAAD,CAAgBR,QAAUA,EAAUV,IAAQU,EAAQT,0BCFtEkB,mLACO,IAAAC,EAEqCC,KAAK5C,MAAvCwC,EAFHG,EAEGH,SAAU3C,EAFb8C,EAEa9C,KAAMuB,EAFnBuB,EAEmBvB,cACxB,OAAIvB,EAAKmB,IAELf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAC0C,EAAD,CAAaL,SAAaA,KAE9BvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAC2C,EAAD,CAAe1B,cAAeA,OARzBnB,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAUzC,GAAG,mBAJlB0C,aA8BTC,cACX1D,YAVoB,SAACoB,GAErB,MAAO,CACH6B,SAAU7B,EAAMuC,UAAUC,QAAQX,SAClC3C,KAAMc,EAAMG,SAASjB,KACrBuB,cAAgBT,EAAMuC,UAAUC,QAAQ/B,iBAM5CgC,2BAAiB,CACf,CAAEC,WAAY,WAAYC,QAAS,CAAC,YAAa,SACjD,CAAED,WAAY,gBAAiBE,MAAO,EAAGD,QAAS,CAAC,OAAQ,WAJlDL,CAOXP,GCSWO,cACX1D,YAboB,SAACoB,EAAO6C,GAE5B,IAAMhC,EAAKgC,EAASC,MAAMC,OAAOlC,GAC3BgB,EAAW7B,EAAMuC,UAAUS,KAAKnB,SAGtC,MAAO,CACHP,QAHYO,EAAWA,EAAShB,GAAM,KAItC3B,KAAMc,EAAMG,SAASjB,QAMzBuD,2BAAiB,CACb,CAAEC,WAAY,cAHPJ,CA/CQ,SAACjD,GAAU,IACtBiC,EAAYjC,EAAZiC,QAER,OADiBjC,EAATH,KACCmB,IAELiB,EAEIhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,oBAA+C6B,EAAQC,OACvDjC,EAAAC,EAAAC,cAAA,SAAI8B,EAAQP,UAEhBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,wBACe8B,EAAQE,gBADvB,IACyCF,EAAQG,gBAEjDnC,EAAAC,EAAAC,cAAA,WACCwB,IAAOM,EAAQI,UAAUR,UAAUS,eAShDrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACfH,EAAAC,EAAAC,cAAA,qBAzBaF,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAUzC,GAAG,sBCLhCsD,6MACFjD,MAAQ,CACJkD,MAAO,GACPC,SAAU,MAEdC,aAAe,SAACC,GACZC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAEK,OAAO7C,GAAKwC,EAAEK,OAAOC,WAGhCC,aAAe,SAACP,GACZA,EAAEQ,iBAEFP,EAAKjE,MAAMyE,OAAOR,EAAKtD,gFAElB,IAAAgC,EACuBC,KAAK5C,MAAzB0E,EADH/B,EACG+B,UACR,OAFK/B,EACc9C,KACXmB,IAAYf,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAUzC,GAAG,MAG7BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMwE,SAAU/B,KAAK2B,aAAcnE,UAAU,SACzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,UAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOyE,QAAQ,UAAf,SACA3E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQyB,GAAG,QAAQqD,SAAUjC,KAAKmB,gBAElD9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOyE,QAAQ,aAAf,YACA3E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAWyB,GAAG,WAAWqD,SAAUjC,KAAKmB,gBAExD9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,UACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACTsE,EAAYzE,EAAAC,EAAAC,cAAA,SAAIuE,GAAgB,gBApCzC1B,aA0DNzD,cAbS,SAACoB,GACrB,MAAO,CACH+D,UAAW/D,EAAMd,KAAK6E,UACtB7E,KAAMc,EAAMG,SAASjB,OAIF,SAACL,GACxB,MAAO,CACHiF,OAAQ,SAACK,GAAD,OAAWtF,GR3DJuF,EQ2DoBD,ER1DhC,SAACtF,EAAUE,EAAXsC,IACcpC,EADyBoC,EAAjBpC,eAGhBC,OAAOmF,2BACZD,EAAYlB,MACZkB,EAAYjB,UACdhE,KAAK,WACHN,EAAS,CAAEO,KAAM,oBAClBkF,MAAM,SAACC,GACN1F,EAAS,CAAEO,KAAM,cAAgBmF,aAVvB,IAACH,KQ+DRxF,CAA6CqE,GC1DtDuB,6MACFxE,MAAQ,CACJkD,MAAO,GACPC,SAAU,GACVsB,UAAW,GACXC,SAAU,MAEdtB,aAAe,SAACC,GACZC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAEK,OAAO7C,GAAKwC,EAAEK,OAAOC,WAGhCC,aAAe,SAACP,GACZA,EAAEQ,iBAEFP,EAAKjE,MAAMsF,OAAOrB,EAAKtD,gFAElB,IAAAgC,EACuBC,KAAK5C,MAAzBH,EADH8C,EACG9C,KAAM6E,EADT/B,EACS+B,UACd,OAAG7E,EAAKmB,IAAYf,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAUzC,GAAG,MAG7BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMwE,SAAU/B,KAAK2B,aAAcnE,UAAU,SACzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,UAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOyE,QAAQ,UAAf,SACA3E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQyB,GAAG,QAAQqD,SAAUjC,KAAKmB,gBAElD9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOyE,QAAQ,aAAf,YACA3E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAWyB,GAAG,WAAWqD,SAAUjC,KAAKmB,gBAExD9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOyE,QAAQ,cAAf,cACA3E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOyB,GAAG,YAAYqD,SAAUjC,KAAKmB,gBAErD9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOyE,QAAQ,aAAf,aACA3E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOyB,GAAG,WAAWqD,SAAUjC,KAAKmB,gBAEpD9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,UACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACTsE,EAAYzE,EAAAC,EAAAC,cAAA,SAAIuE,GAAgB,gBA9CzC1B,aAoENzD,cAbS,SAACoB,GACrB,MAAO,CACHd,KAAMc,EAAMG,SAASjB,KACrB6E,UAAW/D,EAAMd,KAAK6E,YAIH,SAAClF,GACxB,MAAO,CACH8F,OAAQ,SAACC,GAAa/F,ET5CR,SAAC+F,GACnB,OAAO,SAAC/F,EAAUE,EAAX8F,GAAqD,IAA/B5F,EAA+B4F,EAA/B5F,YAAa6F,EAAkBD,EAAlBC,aAChCC,EAAW9F,IACXsD,EAAYuC,IAElBC,EAAS7F,OAAO8F,+BACZJ,EAAQ1B,MACR0B,EAAQzB,UACVhE,KAAK,SAAC8F,GACJ,OAAO1C,EAAUG,WAAW,SAASwC,IAAID,EAAKnE,KAAKT,KAAK8E,IAAI,CACxDV,UAAWG,EAAQH,UACnBC,SAAUE,EAAQF,SAClB5E,SAAU8E,EAAQH,UAAU,GAAKG,EAAQF,SAAS,OAEvDvF,KAAK,WACJN,EAAS,CAAEO,KAAM,qBAClBkF,MAAM,SAACC,GACN1F,EAAS,CAAEO,KAAM,eAAgBmF,WS2BNI,CAAOC,OAI/BhG,CAA6C4F,WCpEtDY,6MACFpF,MAAQ,CACJuB,MAAO,GACPR,QAAS,MAEbqC,aAAe,SAACC,GACZC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAEK,OAAO7C,GAAKwC,EAAEK,OAAOC,WAGhCC,aAAe,SAACP,GACZA,EAAEQ,iBAEFP,EAAKjE,MAAMgG,cAAc/B,EAAKtD,OAC9BsD,EAAKjE,MAAMiG,QAAQC,KAAK,8EAIxB,OADiBtD,KAAK5C,MAAdH,KACCmB,IAGLf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMwE,SAAU/B,KAAK2B,aAAcnE,UAAU,SACzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,sBAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOyE,QAAQ,SAAf,SACA3E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOyB,GAAG,QAAQqD,SAAUjC,KAAKmB,gBAEjD9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOyE,QAAQ,WAAf,mBACA3E,EAAAC,EAAAC,cAAA,YAAUqB,GAAG,UAAUpB,UAAU,uBAAuByE,SAAUjC,KAAKmB,gBAE3E9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,cAjBKH,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAUzC,GAAG,mBAlBd0C,aAuDbzD,cAZS,SAACoB,GACrB,MAAO,CACHd,KAAMc,EAAMG,SAASjB,OAIF,SAACL,GACxB,MAAO,CACHwG,cAAe,SAAC/D,GAAD,OAAazC,ECxDP,SAACyC,GAC1B,OAAO,SAACzC,EAAUE,EAAXsC,GAAuDA,EAAhCpC,YAAgC,IAEpDsD,GAAYuC,EAFwCzD,EAAnByD,gBAGjCjF,EAAUd,IAAWoB,SAASN,QAC9B2F,EAAWzG,IAAWoB,SAASjB,KAAKmB,IAC1CkC,EAAUG,WAAW,YAAY+C,IAAjCjC,OAAAkC,EAAA,EAAAlC,CAAA,GACOlC,EADP,CAEIE,gBAAiB3B,EAAQ4E,UACzBhD,eAAgB5B,EAAQ6E,SACxBc,SAAUA,EACV9D,UAAW,IAAIiE,QAChBxG,KAAK,WACJN,EAAS,CACLO,KAAM,iBACNkC,cAELgD,MAAM,SAACC,GACN1F,EAAS,CACLO,KAAM,uBACNmF,WDoC6Bc,CAAc/D,OAI5C1C,CAA6CwG,GElC7CQ,MAjBf,WACE,OACEtG,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACqG,EAAD,MACAvG,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KACE9C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAO0D,OAAK,EAACC,KAAK,IAAIC,UAAajE,IACnCzC,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAO2D,KAAK,eAAeC,UAAaC,IACxC3G,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAO2D,KAAK,UAAUC,UAAa/C,IACnC3D,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAO2D,KAAK,UAAUC,UAAaxB,IACnClF,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAO2D,KAAK,UAAUC,UAAaZ,QCPzBc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASvD,MACvB,2DClBN,IAAMwD,EAAY,GAkCHC,EAhCK,WAA+B,IAA9BvG,EAA8BwG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBF,EAAWK,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAOC,EAAOvH,MACV,IAAK,cAED,OADAa,QAAQC,IAAI,eACLsD,OAAAkC,EAAA,EAAAlC,CAAA,GACAxD,EADP,CAEI+D,UAAW,iBAEnB,IAAK,iBAED,OADA9D,QAAQC,IAAI,iBACLsD,OAAAkC,EAAA,EAAAlC,CAAA,GACAxD,EADP,CAEI+D,UAAW,OAEnB,IAAK,kBAED,OADA9D,QAAQC,IAAI,mBACLF,EACX,IAAK,iBACD,OAAOwD,OAAAkC,EAAA,EAAAlC,CAAA,GACAxD,EADP,CAEI+D,UAAW,OAEnB,IAAK,eACD,OAAOP,OAAAkC,EAAA,EAAAlC,CAAA,GACAxD,EADP,CAEI+D,UAAW4C,EAAOpC,IAAIqC,UAE9B,QACI,OAAO5G,IC9Bb6G,EAAY,CACdhF,SAAU,CACN,CAAChB,GAAI,IAAKU,MAAO,gBAAiBR,QAAS,oBAC3C,CAACF,GAAI,IAAKU,MAAO,UAAWR,QAAS,oBACrC,CAACF,GAAI,IAAKU,MAAO,OAAQR,QAAS,sBAkB3B+F,EAbQ,WAA+B,IAA9B9G,EAA8BwG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBK,EAAWF,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,OAAOC,EAAOvH,MACV,IAAK,iBAED,OADAa,QAAQC,IAAI,kBAAmByG,EAAOrF,SAC/BtB,EACX,IAAK,uBAED,OADAC,QAAQC,IAAI,wBAAyByG,EAAOpC,KACrCvE,EACX,QACI,OAAOA,YCLJ+G,EAPKC,YAAgB,CAChC9H,KAAMqH,EACNjF,QAASwF,EACTvE,UAAW0E,mBACX9G,SAAU+G,4DCKZ/G,IAASgH,cAVU,CACjBC,OAAQ,0CACRC,WAAY,mCACZC,YAAa,0CACbC,UAAW,mBACXC,cAAe,GACfC,kBAAmB,eACnBC,MAAO,wCAITvH,IAASoC,YAEMpC,QAAf,ECJIwH,EAAQC,YAAYb,EACtBzE,YACEuF,YAAgBC,IAAMC,kBAAkB,CAAC9I,0BAAa6F,+BACtDkD,6BAAmBC,EAAU,CAAEC,wBAAwB,EAAMC,YAAa,QAASC,mBAAmB,IACtGC,yBAAeJ,KAIrBN,EAAMW,oBAAoBnJ,KAAK,WAC7BoJ,IAASC,OAAOlJ,EAAAC,EAAAC,cAACiJ,EAAA,EAAD,CAAUd,MAAOA,GAAOrI,EAAAC,EAAAC,cAACkJ,EAAD,OAAoBC,SAASC,eAAe,SL0GhF,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5J,KAAK,SAAA6J,GACjCA,EAAaC","file":"static/js/main.072e3b3f.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\nconst SignIn = (props) => {\n\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/create'>New Project</NavLink></li>\n            <li><a onClick={ props.signOut }>Logout</a></li>\n            <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToPros = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToPros)(SignIn);","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS'})\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR' , err})\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n              dispatch({ type: 'SIGNOUT_SUCCESS'});\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const fireabse = getFirebase();\n        const firestore = getFirestore();\n\n        fireabse.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS'})\n        }).catch((err) => {\n            dispatch({ type: 'SIGNUP_ERROR', err})\n        })\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignOut = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/signup'>SignUp</NavLink></li>\n            <li><NavLink to='/signin'>Login</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignOut;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignIn from './SignIn';\nimport SignOut from './SignOut';\nimport { connect } from 'react-redux';\n\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    const links = auth.uid ? <SignIn profile={profile}/>: <SignOut />\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\">ProjectPlan</Link>\n                { links }\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n    const { notifications } = props;\n\n    return (\n        <div className=\"section\">\n            <div className=\"card\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">\n                        Notifications\n                    </span>\n                    <ul className=\"notifications\">\n                        { notifications && notifications.map(item => {\n                            return (\n                                <li key={item.id}>\n                                    <span className=\"pink-text\">{item.user} </span><span>\n                                        {item.content}\n                                    </span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        })}\n                        \n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications","import React from 'react'\nimport moment from 'moment';\n\nconst ProjectSummary = ({project}) => {\n    return (\n        <div className=\"project-list section\">\n            <div className=\"project-summary card z-depth-0\">\n                <div className=\"card-content text-darkn-3\">\n                    <span className=\"card-title\">\n                        {project.title}\n                    </span>\n                    <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                    <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary;","import React from 'react'\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\n\nconst ProjectList = ({ projects }) => {\n    return (\n        <div className=\"project-list section\">\n            { projects && projects.map( project => {\n                return (\n                    <Link to={ '/project/' + project.id } >\n                        <ProjectSummary project={ project } key = { project.id }/>\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ProjectList;","import React, { Component } from 'react';\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from \"react-router-dom\";\n\nclass Dashboard extends Component {\n    render() {\n        //console.log(this.props);\n        const { projects, auth, notifications } = this.props; \n        if(!auth.uid) return <Redirect to='/signin' />\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects = { projects }/>\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications} />\n                    </div>\n                    \n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    //console.log(state);\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications : state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n      { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n      { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n        \n    ])\n  )(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from \"react-router-dom\";\nimport moment from 'moment'\n\nconst ProjectDetails = (props) => {\n    const { project } = props;\n    const { auth } = props;\n    if(!auth.uid) return <Redirect to='/signin' />\n\n    if (project) {\n        return (\n            <div className=\"project-details container section\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">Project Tittle - {project.title}</span>\n                        <p>{project.content}</p>\n                    </div>\n                    <div className=\"card-action gret lighten-4 grey-text\">\n                        <div>\n                            Posted by {project.authorFirstName} {project.authorLastName}\n                        </div>\n                        <div>\n                        {moment(project.createdAt.toDate()).calendar()}\n                    </div>\n                    </div>\n                </div>\n            </div>\n        )\n\n    } else {\n        return (\n            <div className=\"container center\">\n            <p>loading</p>\n        </div>\n        )\n    }\n    \n}\n\nconst mapStateToProps = (state, ownProps) => {\n    //console.log(state)\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null;\n\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects' }\n    ])\n)(ProjectDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from \"react-router-dom\";\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        //console.log(this.state);\n        this.props.signIn(this.state);\n    }\n    render() {\n        const { authError, auth } = this.props;\n        if(auth.uid) return <Redirect to='/' />\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">\n                        SignIn\n                    </h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email \">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}></input>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password \">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}></input>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">SignIn</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{authError}</p>: null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(SignIn)\n","import React, { Component } from 'react'\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        //console.log(this.state);\n        this.props.signUp(this.state);\n    }\n    render() {\n        const { auth, authError } = this.props;\n        if(auth.uid) return <Redirect to='/' />\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">\n                        SignUp\n                    </h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email \">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}></input>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password \">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}></input>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName \">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}></input>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName \">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}></input>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">SignUp</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{authError}</p>: null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => {dispatch(signUp(newUser))}\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/projectActions';\nimport { Redirect } from \"react-router-dom\";\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        //console.log(this.state);\n        this.props.createProject(this.state)\n        this.props.history.push('/')\n    }\n    render() {\n        const { auth } = this.props;\n        if(!auth.uid) return <Redirect to='/signin' />\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">\n                        Create New Project\n                    </h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}></input>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create!</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        // make async all to db\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({\n                type: 'CREATE_PROJECT', \n                project\n            })\n        }).catch((err) => {\n            dispatch({\n                type: 'CREATE_PROJECT_ERROR', \n                err\n            })\n        })\n    }\n};","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component = {Dashboard} />\n          <Route path='/project/:id' component = {ProjectDetails} />\n          <Route path='/signin' component = {SignIn} />\n          <Route path='/Signup' component = {SignUp} />\n          <Route path='/create' component = {CreateProject} />\n        </Switch>\n      </div>   \n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initstate = {}\n\nconst authReducer = (state = initstate, action) => {\n    switch(action.type) {\n        case 'LOGIN_ERROR':\n            console.log('Login error')\n            return { \n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGINN_SUCCESS':\n            console.log('Login success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success')\n            return state\n        case 'SIGNUP_SUCCESS':\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state\n    }\n}\n\nexport default authReducer;","const initState = {\n    projects: [\n        {id: '1', title: 'Mukunda Holla', content: 'vue.js developer'},\n        {id: '2', title: 'Namrata', content: 'vue.js developer'},\n        {id: '3', title: 'Modi', content: 'vue.js developer'}\n        \n    ]\n}\n\nconst projectReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project); \n            return state\n        case 'CREATE_PROJECT_ERROR':\n            console.log('created project error', action.err); \n            return state\n        default:\n            return state\n    }\n}\n\nexport default projectReducer;","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport {combineReducers} from 'redux'\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase'; \n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyBv6JgAJxubRB51Hs_KyE0CBLZIK4OmRYo\",\n    authDomain: \"projectplanreact.firebaseapp.com\",\n    databaseURL: \"https://projectplanreact.firebaseio.com\",\n    projectId: \"projectplanreact\",\n    storageBucket: \"\",\n    messagingSenderId: \"483608695138\",\n    appId: \"1:483608695138:web:7c6960028e9f069e\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.firestore()\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\n\nconst store = createStore(rootReducer,\n    compose(\n      applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n      reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true }), // redux binding for firebase\n      reduxFirestore(fbConfig) // redux bindings for firestore\n    )\n  );\n\nstore.firebaseAuthIsReady.then(() =>{\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n  \n})\n\n"],"sourceRoot":""}